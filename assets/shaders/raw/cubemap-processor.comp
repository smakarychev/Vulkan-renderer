#version 460

#include "globals.shader_header"

layout(local_size_x = 32, local_size_y = 32) in;

@immutable_sampler
layout(set = 0, binding = 0) uniform sampler u_sampler;
layout(set = 1, binding = 0) uniform texture2D u_equirectangular;
layout(set = 1, binding = 1, rgba16f) uniform writeonly imageCube u_cubemap;

layout(push_constant) uniform push_constants {
    vec2 u_cubemap_size_inv;
};

void main() {
    const vec3 normal = cubemap_normal_vector(gl_GlobalInvocationID, u_cubemap_size_inv);

    const float phi = atan(normal.z, normal.x);
    const float theta = acos(normal.y);
    
    const vec2 uv = vec2(phi / TAU, 1.0f - theta / PI);
    
    const vec4 color = textureLod(sampler2D(u_equirectangular, u_sampler), uv, 0);
    
    imageStore(u_cubemap, ivec3(gl_GlobalInvocationID), color);
}