#version 460

#include "common.shader_header"

#extension GL_KHR_shader_subgroup_ballot: enable
#extension GL_KHR_shader_subgroup_vote: enable

layout(local_size_x = 64) in;

layout(constant_id = 0) const bool CLEAR = false;

layout(std430, set = 0, binding = 0) buffer command_buffer {
    IndirectCommand commands[];
} u_command_buffer;

@dynamic
layout(std430, set = 0, binding = 1) writeonly buffer compacted_command_buffer {
    IndirectCommand commands[];
} u_compacted_command_buffer;

@dynamic
layout(std430, set = 0, binding = 2) readonly buffer command_count_buffer {
    uint count;
} u_command_count_buffer;

layout(std430, set = 0, binding = 3) writeonly buffer compacted_command_count_buffer {
    uint count;
} u_compacted_command_count_buffer;

layout(push_constant) uniform push_constants {
    uint u_count;
    uint u_command_offset;
    uint u_max_draw_calls;
};

void main() {
    uint id = gl_GlobalInvocationID.x;
    if (id + u_command_offset >= u_command_count_buffer.count || id >= u_count)
        return;
    id = id + u_command_offset;
    
    if (CLEAR) {
        u_command_buffer.commands[u_max_draw_calls - id - 1].indexCount = 0;
        return;
    }

    IndirectCommand command = u_command_buffer.commands[u_max_draw_calls - id - 1];

    bool should_draw = command.indexCount > 0;

    if (!subgroupAny(should_draw))
        return;

    uvec4 should_draw_ballot = subgroupBallot(should_draw);
    uint total_should_draw_count = subgroupBallotBitCount(should_draw_ballot);

    uint compacted_buffer_index_base = 0;
    if (subgroupElect())
        compacted_buffer_index_base = atomicAdd(u_compacted_command_count_buffer.count, total_should_draw_count);

    compacted_buffer_index_base = subgroupBroadcastFirst(compacted_buffer_index_base);

    uint compacted_buffer_offset = subgroupBallotExclusiveBitCount(should_draw_ballot);

    uint compacted_buffer_index = compacted_buffer_index_base + compacted_buffer_offset;

    if (should_draw) {
        u_compacted_command_buffer.commands[compacted_buffer_index] = command;
    }
}