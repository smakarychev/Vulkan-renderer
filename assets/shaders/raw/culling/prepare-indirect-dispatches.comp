#version 460

layout(local_size_x = 64) in;

#include "common.shader_header"

@dynamic
layout(std430, set = 0, binding = 0) readonly buffer command_count_buffer {
    uint count;
} u_command_count_buffer;

@dynamic
layout(std430, set = 0, binding = 1) writeonly buffer indirect_dispatch_buffer {
    VkDispatchIndirectCommand commands[];
} u_indirect_dispatch_buffer;

layout(push_constant) uniform push_constants {
    uint u_commands_per_batch_count;
    uint u_commands_multiplier;
    uint u_local_group_x;
    uint u_max_dispatches_count;
};

void main() {
    uint dispatch_id = gl_GlobalInvocationID.x;
    
    if (dispatch_id >= u_max_dispatches_count)
        return;
    
    uint command_offset = gl_GlobalInvocationID.x * u_commands_per_batch_count;
    uint total_count = u_command_count_buffer.count;
    
    if (command_offset >= total_count) {
        VkDispatchIndirectCommand command;
        command.x = command.y = command.z = 0;
        u_indirect_dispatch_buffer.commands[dispatch_id] = command;
    }
    else {
        uint real_count = min(u_commands_per_batch_count, total_count - command_offset);
        real_count = real_count * u_commands_multiplier / u_local_group_x + 1;
        
        VkDispatchIndirectCommand command;
        command.y = command.z = 1;
        command.x = real_count;
        u_indirect_dispatch_buffer.commands[dispatch_id] = command;
    }
}