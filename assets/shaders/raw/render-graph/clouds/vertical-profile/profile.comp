#version 460

#include "../common.glsl"

layout(local_size_x = 8, local_size_y = 8) in;

layout(set = 1, binding = 0, rgba16f) uniform writeonly image2D u_profile_map;

vec4 get_profile(vec2 uv) {
    const float perlin_frequency = 4.0f;
    const float type_top = remap_01(perlin_3_octaves(vec3(uv, 0), perlin_frequency, true), 0.2f, 1.4f);
    const float type_bottom = remap_01(perlin_3_octaves(vec3(uv, 256), perlin_frequency, true), 0.45f, 1.6f);
    const float top_height = 1;
    const float bottom_height = 0;
    
    return vec4(type_top, type_bottom, top_height, bottom_height);
}

void main() {
    const ivec2 coord = ivec2(gl_GlobalInvocationID.xy);
    const ivec2 image_size = imageSize(u_profile_map);
    const vec2 texture_size_inv = 1.0f / image_size;
    const vec2 uv = (vec2(coord) + 0.5f) * texture_size_inv;

    if (coord.x >= image_size.x || coord.y >= image_size.y) {
        return;
    }

    imageStore(u_profile_map, coord, vec4(get_profile(uv)));
}