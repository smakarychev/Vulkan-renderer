#version 460

#include "common.glsl"

layout(local_size_x = 8, local_size_y = 8) in;

layout(set = 1, binding = 0, rgba16f) uniform writeonly image2D u_curl_noise;

void main() {
    const ivec2 coord = ivec2(gl_GlobalInvocationID.xy);
    const ivec2 image_size = imageSize(u_curl_noise);
    const vec2 texture_size_inv = 1.0f / image_size;
    const vec2 uv = (vec2(coord) + 0.5f) * texture_size_inv;

    if (coord.x >= image_size.x || coord.y >= image_size.y) {
        return;
    }

    const float curl_noise_frequency = 4.0f;
    vec3 noise = curl_noise(vec3(uv, 0.0f), curl_noise_frequency);
    noise = encode_curl(noise);
    
    imageStore(u_curl_noise, coord, vec4(noise, 1.0f));
}