#version 460

#include "common.glsl"

layout(local_size_x = 16, local_size_y = 16) in;

layout(set = 1, binding = 0, rgba16f) uniform writeonly image2D u_lut;

layout(scalar, set = 1, binding = 1) uniform atmosphere_settings {
    AtmosphereSettings settings;
} u_atmosphere_settings;

void main() {
    const ivec2 coord = ivec2(gl_GlobalInvocationID.xy);
    if (coord.x >= TRANSMITTANCE_LUT_WIDTH || coord.y >= TRANSMITTANCE_LUT_HEIGHT) 
        return;
    
    const AtmosphereSettings atm = u_atmosphere_settings.settings;
    
    const vec2 uv = vec2(coord) / vec2(TRANSMITTANCE_LUT_WIDTH, TRANSMITTANCE_LUT_HEIGHT);
    const vec2 r_mu = transmittance_r_mu_from_uv(atm, uv);

    const vec3 view_pos = vec3(0.0f, r_mu.x, 0.0f);
    const vec3 view_dir = vec3(0.0f, r_mu.y, sqrt(1.0f - r_mu.y * r_mu.y));
    
    const float d = distance_to_atmosphere_top(atm, r_mu.x, r_mu.y);
    const vec3 transmittance = calculate_transmittance(view_pos, view_dir, d, vec3(0.0f), atm);

    imageStore(u_lut, coord, vec4(transmittance, 1.0f));
}
