#version 460

#include "common.glsl"

layout(local_size_x = MAX_VIEWS) in;

layout(std430, set = 1, binding = 0) buffer index_count_buffer {
    uint count[];
} u_index_counts;

layout(std430, set = 1, binding = 1) writeonly buffer indirect_draw_buffer {
    IndirectCommand command[];
} u_draws;

layout(push_constant) uniform push_constants {
    uint u_view_count;
};

void main() {
    const uint id = gl_GlobalInvocationID.x;
    if (id >= u_view_count)
        return;
    u_draws.command[id].firstIndex = 0;
    u_draws.command[id].indexCount = u_index_counts.count[id];
    u_draws.command[id].instanceCount = 1;
    u_draws.command[id].vertexOffset = 0;
    u_draws.command[id].firstInstance = 0;
    u_draws.command[id].render_object = 0;

    u_index_counts.count[id] = 0;
}
