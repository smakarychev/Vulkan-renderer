#version 460

layout(set = 0, binding = 0) uniform sampler u_in_sampler;
layout(set = 1, binding = 0) uniform texture2D u_in_image;
layout(set = 1, binding = 1, r32f) uniform writeonly image2D u_hiz_mips[16];

#define NVPRO_PYRAMID_TYPE float

void store(in ivec2 coord, in int level, in float in_) {
    imageStore(u_hiz_mips[level], coord, vec4(in_));
}
#define NVPRO_PYRAMID_STORE(coord, level, in_) store(coord, level, in_)

ivec2 levelSize(int level) { return imageSize(u_hiz_mips[level]); }
#define NVPRO_PYRAMID_LEVEL_SIZE levelSize

#define NVPRO_PYRAMID_REDUCE4(v00, v01, v10, v11, out_) \
    out_ = min(min(v00, v01), min(v10, v11))

void loadReduce4(in ivec2 coord, in int level, out float out_) {
    vec2 normalized_coord = (vec2(coord) + vec2(1)) / levelSize(level);
    out_ = textureLod(sampler2D(u_in_image, u_in_sampler), normalized_coord, level).r;
}
#define NVPRO_PYRAMID_LOAD_REDUCE4 loadReduce4

#extension GL_KHR_shader_subgroup_ballot: enable
#extension GL_KHR_shader_subgroup_shuffle: enable

#define NVPRO_PYRAMID_IS_FAST_PIPELINE 1
#include "../../../nvpro/nvpro_pyramid.glsl"

void main() {
    nvproPyramidMain();
}