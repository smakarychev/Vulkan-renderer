#version 460

#extension GL_KHR_shader_subgroup_ballot: enable
#extension GL_KHR_shader_subgroup_shuffle: enable
#extension GL_KHR_shader_subgroup_arithmetic: enable

layout(local_size_x = 32, local_size_y = 32) in;

layout(constant_id = 0) const bool DEPTH_MIN_MAX = false;

layout(set = 0, binding = 0) uniform sampler u_in_sampler;
layout(set = 1, binding = 0) uniform texture2D u_in_image;
layout(set = 1, binding = 1, r32f) uniform writeonly image2D u_out_image;
layout(set = 1, binding = 2) buffer min_max {
    uint min;
    uint max;
} u_min_max;

layout(push_constant) uniform push_constants {
    uvec2 levels_size;
};

void main() {
    uvec2 pos = gl_GlobalInvocationID.xy;

    float depth = texture(sampler2D(u_in_image, u_in_sampler), (vec2(pos) + vec2(0.5f)) / levels_size).r;
    if (DEPTH_MIN_MAX && depth > 0.0f) {
        const float min = subgroupMin(depth);
        const float max = subgroupMax(depth);

        if (subgroupElect()) {
            atomicMin(u_min_max.min, floatBitsToUint(min));
            atomicMax(u_min_max.max, floatBitsToUint(max));
        }
    }
    imageStore(u_out_image, ivec2(pos), vec4(depth));
}